version: '3.8'
services:

  database:
    image: postgres:14.1-alpine
    container_name: task-service-db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_HOST_PORT}:${DB_CONTAINER_PORT}
    volumes:
      - task-service-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - task-tracker-network

  redis:
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: always
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
    networks:
      - task-tracker-network

  task-service:
    image: realenginehub/task-tracker-backend-task-tracker-service:latest
    container_name: task-service
    restart: always
    environment:
      - PORT=${TASK_SERVICE_CONTAINER_PORT}
      - DB_URL=${DB_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - ACCESS_SECRET=${ACCESS_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_CONTAINER_PORT=${REDIS_CONTAINER_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CACHE_TIME=${CACHE_TIME}
    depends_on:
      database:
        condition: service_healthy
    ports:
      - ${TASK_SERVICE_HOST_PORT}:${TASK_SERVICE_CONTAINER_PORT}
    networks:
      - task-tracker-network

  auth-service:
    image: realenginehub/task-tracker-backend-auth-service:latest
    container_name: auth-service
    restart: always
    environment:
      - PORT=${AUTH_SERVICE_CONTAINER_PORT}
      - DB_URL=${DB_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - ACCESS_SECRET=${ACCESS_SECRET}
      - ACCESS_SECRET_EXPIRE=${ACCESS_SECRET_EXPIRE}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - REFRESH_SECRET_EXPIRE=${REFRESH_SECRET_EXPIRE}
    depends_on:
      database:
        condition: service_healthy
      task-service:
        condition: service_started
    ports:
      - ${AUTH_SERVICE_HOST_PORT}:${AUTH_SERVICE_CONTAINER_PORT}
    networks:
      - task-tracker-network

  admin-service:
    image: realenginehub/task-tracker-backend-admin-service:latest
    container_name: admin-service
    restart: always
    environment:
      - PORT=${ADMIN_SERVICE_CONTAINER_PORT}
      - DB_URL=${DB_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - ACCESS_SECRET=${ACCESS_SECRET}
    depends_on:
      database:
        condition: service_healthy
      task-service:
        condition: service_started
    ports:
      - ${ADMIN_SERVICE_HOST_PORT}:${ADMIN_SERVICE_CONTAINER_PORT}
    networks:
      - task-tracker-network

volumes:
  task-service-db:
  
networks:
  task-tracker-network:
    external: true